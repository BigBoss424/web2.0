{"remainingRequest":"/home/otacon424/Documents/github/portfolio/v6/node_modules/thread-loader/dist/cjs.js??ref--2-1!/home/otacon424/Documents/github/portfolio/v6/node_modules/babel-loader/lib/index.js??ref--2-2!/home/otacon424/Documents/github/portfolio/v6/components/thanks/PaymentButton.js","dependencies":[{"path":"/home/otacon424/Documents/github/portfolio/v6/components/thanks/PaymentButton.js","mtime":1585717879667},{"path":"/home/otacon424/Documents/github/portfolio/v6/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/otacon424/Documents/github/portfolio/v6/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/otacon424/Documents/github/portfolio/v6/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICBzdHJpcGU6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIG9wdGlvbnM6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiAoKSA9PiAoe30pCiAgICB9CiAgfSwKCiAgZGF0YSgpIHsKICAgIGNvbnN0IHN0cmlwZUluc3RhbmNlID0gdGhpcy5zdHJpcGU7CiAgICByZXR1cm4gewogICAgICBsb2FkaW5nOiB0cnVlLAogICAgICBjYW5NYWtlUGF5bWVudDogZmFsc2UsCiAgICAgIGVsZW1lbnRzOiBzdHJpcGVJbnN0YW5jZS5lbGVtZW50cyh7CiAgICAgICAgbG9jYWxlOiB0aGlzLiRyb290LmxvY2FsZQogICAgICB9KSwKICAgICAgcGF5bWVudFJlcXVlc3Q6IHN0cmlwZUluc3RhbmNlLnBheW1lbnRSZXF1ZXN0KHRoaXMub3B0aW9ucy5wYXltZW50UmVxdWVzdCB8fCB7fSkKICAgIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIGJ1dHRvblN0eWxlKCkgewogICAgICByZXR1cm4gdGhpcy5vcHRpb25zICYmIHRoaXMub3B0aW9ucy5zdHlsZSB8fCB1bmRlZmluZWQ7CiAgICB9CgogIH0sCgogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmNoZWNrQXBpQXZhaWxhYmlsaXR5KCk7CiAgfSwKCiAgd2F0Y2g6IHsKICAgIG9wdGlvbnMoKSB7CiAgICAgIHRoaXMudXBkYXRlUGF5bWVudFJlcXVlc3QoKTsKICAgIH0KCiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBjaGVja0FwaUF2YWlsYWJpbGl0eSgpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCBjYW5NYWtlUGF5bWVudCA9IGF3YWl0IHRoaXMucGF5bWVudFJlcXVlc3QuY2FuTWFrZVBheW1lbnQoKTsKICAgICAgICB0aGlzLmluaXQoY2FuTWFrZVBheW1lbnQpOwogICAgICAgIHRoaXMucGF5bWVudFJlcXVlc3Qub24oJ3BheW1lbnRtZXRob2QnLCBldmVudCA9PiB0aGlzLiRlbWl0KCdyZWNlaXZlZFBheW1lbnRNZXRob2QnLCBldmVudCkpOwogICAgICB9IGNhdGNoIChfKSB7fQogICAgfSwKCiAgICBpbml0KGNhbk1ha2VQYXltZW50KSB7CiAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICB0aGlzLmNhbk1ha2VQYXltZW50ID0gY2FuTWFrZVBheW1lbnQ7CiAgICAgIHRoaXMuJG5leHRUaWNrKHRoaXMuY3JlYXRlUGF5bWVudFJlcXVlc3RCdXR0b24pOwogICAgfSwKCiAgICBjcmVhdGVQYXltZW50UmVxdWVzdEJ1dHRvbigpIHsKICAgICAgaWYgKCF0aGlzLmNhbk1ha2VQYXltZW50IHx8ICF0aGlzLiRyZWZzLmVsZW1lbnQpIHsKICAgICAgICB0aGlzLiRlbWl0KCdhdmFpbGFibGUnLCBmYWxzZSk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLiRlbWl0KCdhdmFpbGFibGUnLCB0cnVlKTsKICAgICAgdGhpcy5lbGVtZW50cy5jcmVhdGUoJ3BheW1lbnRSZXF1ZXN0QnV0dG9uJywgewogICAgICAgIHBheW1lbnRSZXF1ZXN0OiB0aGlzLnBheW1lbnRSZXF1ZXN0LAogICAgICAgIHN0eWxlOiB0aGlzLmJ1dHRvblN0eWxlIHx8IHt9CiAgICAgIH0pLm1vdW50KHRoaXMuJHJlZnMuZWxlbWVudCk7CiAgICB9LAoKICAgIHVwZGF0ZVBheW1lbnRSZXF1ZXN0KCkgewogICAgICBpZiAoIXRoaXMucGF5bWVudFJlcXVlc3QpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGNvbnN0IHsKICAgICAgICB0b3RhbAogICAgICB9ID0gdGhpcy5vcHRpb25zLnBheW1lbnRSZXF1ZXN0OwogICAgICB0aGlzLnBheW1lbnRSZXF1ZXN0LnVwZGF0ZSh7CiAgICAgICAgdG90YWwKICAgICAgfSk7CiAgICB9CgogIH0sCgogIHJlbmRlcihjcmVhdGVFbGVtZW50KSB7CiAgICAvLyBSZW5kZXIgYSBsb2FkaW5nIHNsb3QgaWYgd2UgYXJlIHdhaXRpbmcgZm9yIGNhbk1ha2VQYXltZW50LgogICAgaWYgKHRoaXMubG9hZGluZykgewogICAgICByZXR1cm4gdGhpcy4kc2xvdHMubG9hZGluZyAmJiB0aGlzLiRzbG90cy5sb2FkaW5nWzBdOwogICAgfSAvLyBSZW5kZXIgYSB3YXJuaW5nIHNsb3QgaWYgcGF5bWVudCByZXF1ZXN0IGlzbid0IGF2YWlsYWJsZS4KCgogICAgaWYgKCF0aGlzLmNhbk1ha2VQYXltZW50KSB7CiAgICAgIHJldHVybiB0aGlzLiRzbG90cy51bmF2YWlsYWJsZSAmJiB0aGlzLiRzbG90cy51bmF2YWlsYWJsZVswXTsKICAgIH0gLy8gUmVuZGVyIHNjb3BlZCBzbG90IGlmIHByb3ZpZGVkLgoKCiAgICBpZiAodGhpcy4kc2NvcGVkU2xvdHMuZGVmYXVsdCkgewogICAgICByZXR1cm4gdGhpcy4kc2NvcGVkU2xvdHMuZGVmYXVsdCh7CiAgICAgICAgbGlzdGVuZXJzOiB7CiAgICAgICAgICBjbGljazogZXZlbnQgPT4gdGhpcy5wYXltZW50UmVxdWVzdC5zaG93KCkKICAgICAgICB9LAogICAgICAgIGNhbk1ha2VQYXltZW50OiB0aGlzLmNhbk1ha2VQYXltZW50CiAgICAgIH0pOwogICAgfSAvLyBPdGhlcndpc2UgcmVuZGVyIGRlZmF1bHQgU3RyaXBlIEVsZW1lbnQgYnV0dG9uLgoKCiAgICByZXR1cm4gY3JlYXRlRWxlbWVudCgnZGl2JywgewogICAgICByZWY6ICdlbGVtZW50JwogICAgfSk7CiAgfQoKfTs="},{"version":3,"sources":["/home/otacon424/Documents/github/portfolio/v6/components/thanks/PaymentButton.js"],"names":["props","stripe","type","Object","required","options","default","data","stripeInstance","loading","canMakePayment","elements","locale","$root","paymentRequest","computed","buttonStyle","style","undefined","mounted","checkApiAvailability","watch","updatePaymentRequest","methods","init","on","event","$emit","_","$nextTick","createPaymentRequestButton","$refs","element","create","mount","total","update","render","createElement","$slots","unavailable","$scopedSlots","listeners","click","show","ref"],"mappings":"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","sourcesContent":["export default {\n  props: {\n    stripe: {\n      type: Object,\n      required: true\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    const stripeInstance = this.stripe\n\n    return {\n      loading: true,\n      canMakePayment: false,\n      elements: stripeInstance.elements({ locale: this.$root.locale }),\n      paymentRequest: stripeInstance.paymentRequest(this.options.paymentRequest || {})\n    }\n  },\n  computed: {\n    buttonStyle () {\n      return (this.options && this.options.style) || undefined\n    }\n  },\n  mounted () {\n    this.checkApiAvailability()\n  },\n  watch: {\n    options () {\n      this.updatePaymentRequest()\n    }\n  },\n  methods: {\n    async checkApiAvailability () {\n      try {\n        const canMakePayment = await this.paymentRequest.canMakePayment()\n        this.init(canMakePayment)\n\n        this.paymentRequest.on('paymentmethod', event => this.$emit('receivedPaymentMethod', event))\n      } catch (_) {}\n    },\n    init (canMakePayment) {\n      this.loading = false\n      this.canMakePayment = canMakePayment\n      this.$nextTick(this.createPaymentRequestButton)\n    },\n    createPaymentRequestButton () {\n      if (!this.canMakePayment || !this.$refs.element) {\n        this.$emit('available', false)\n        return\n      }\n\n      this.$emit('available', true)\n\n      this.elements\n        .create('paymentRequestButton', { paymentRequest: this.paymentRequest, style: this.buttonStyle || {} })\n        .mount(this.$refs.element)\n    },\n    updatePaymentRequest () {\n      if (!this.paymentRequest) {\n        return\n      }\n      const { total } = this.options.paymentRequest\n      this.paymentRequest.update({ total })\n    }\n  },\n  render (createElement) {\n    // Render a loading slot if we are waiting for canMakePayment.\n    if (this.loading) {\n      return this.$slots.loading && this.$slots.loading[0]\n    }\n\n    // Render a warning slot if payment request isn't available.\n    if (!this.canMakePayment) {\n      return this.$slots.unavailable && this.$slots.unavailable[0]\n    }\n\n    // Render scoped slot if provided.\n    if (this.$scopedSlots.default) {\n      return this.$scopedSlots.default({\n        listeners: { click: event => this.paymentRequest.show() },\n        canMakePayment: this.canMakePayment\n      })\n    }\n\n    // Otherwise render default Stripe Element button.\n    return createElement('div', { ref: 'element' })\n  }\n}\n"]}]}