{"remainingRequest":"/home/otacon424/Documents/github/portfolio/v6/node_modules/thread-loader/dist/cjs.js??ref--2-1!/home/otacon424/Documents/github/portfolio/v6/node_modules/babel-loader/lib/index.js??ref--2-2!/home/otacon424/Documents/github/portfolio/v6/node_modules/eslint-loader/dist/cjs.js!/home/otacon424/Documents/github/portfolio/v6/.nuxt/client.js","dependencies":[{"path":"/home/otacon424/Documents/github/portfolio/v6/.nuxt/client.js","mtime":1586844562638},{"path":"/home/otacon424/Documents/github/portfolio/v6/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/otacon424/Documents/github/portfolio/v6/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/otacon424/Documents/github/portfolio/v6/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/otacon424/Documents/github/portfolio/v6/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/otacon424/Documents/github/portfolio/v6/.nuxt/client.js"],"names":["Vue","sanitizeComponent","resolveRouteComponents","getMatchedComponents","getMatchedComponentsInstances","flatMapComponents","setContext","getLocation","compile","getQueryDiff","globalHandleError","createApp","NuxtError","NuxtLink","component","name","_lastPaths","app","router","NUXT","window","__NUXT__","Object","assign","config","logs","length","ssrLogSyle","console","group","forEach","logObj","type","log","args","groupEnd","$nuxt","defaultErrorHandler","errorHandler","err","vm","info","handled","rest","$root","nuxtApp","keys","find","nuxtInstance","error","process","env","NODE_ENV","message","then","mountApp","catch","componentOption","key","options","option","mapTransitions","toComponents","to","from","componentTransitions","transition","fromComponents","maxDepth","Math","max","mergedTransitions","i","toTransitions","transitions","filter","toLowerCase","includes","push","loadAsyncComponents","next","_pathChanged","Boolean","nuxt","path","_queryChanged","JSON","stringify","query","_diffQuery","$loading","start","manual","Component","instance","Components","startLoader","some","watchQuery","Array","isArray","apply","statusCode","status","response","test","location","reload","$emit","applySSRData","ssrData","_Ctor","resolveComponents","base","mode","match","_","index","_Component","data","components","callMiddleware","Promise","resolve","render","fromMatches","map","matched","params","nextCalled","_next","finish","pause","route","bind","_dateLastError","dateErr","_hadError","matches","errorLayout","layout","loadLayout","call","context","setTransitions","normalizeComponents","___","extend","showNextPage","$options","default","setLayout","fixPrepatch","instances","nextTick","_isDestroyed","constructor","_dataRefresh","$vnode","keepAlive","newData","set","$data","$nextTick","setTimeout","hotReloadAPI","nuxtReady","_app","onNuxtReadyCbs","cb","_onNuxtLoaded","afterEach","noopData","noopFetch","getNuxtChildComponents","$parent","$components","$children","$child","nuxtChild","c","__file","module","hot","addHotReload","$component","depth","_hasHotReload","_forceUpdate","$forceUpdate","currentRoute","promises","isHMR","layoutName","promise","all","__app","mount","$mount","beforeEach","serverRendered","clientFirstMount","unregisterHook","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AAEA,SACEC,iBADF,EAEEC,sBAFF,EAGEC,oBAHF,EAIEC,6BAJF,EAKEC,iBALF,EAMEC,UANF,EAOEC,WAPF,EAQEC,OARF,EASEC,YATF,EAUEC,iBAVF,QAWO,YAXP;AAYA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,YAArC;AAEA,OAAOC,QAAP,MAAqB,kCAArB,C,CAAwD;AAExD;;AACAb,GAAG,CAACc,SAAJ,CAAcD,QAAQ,CAACE,IAAvB,EAA6BF,QAA7B,E,CAEA;;AACA,IAAIG,UAAU,GAAG,EAAjB;AACA,IAAIC,GAAJ;AACA,IAAIC,MAAJ,C,CAEA;;AACA,IAAMC,IAAI,GAAGC,MAAM,CAACC,QAAP,IAAmB,EAAhC;AAEAC,MAAM,CAACC,MAAP,CAAcvB,GAAG,CAACwB,MAAlB,EAA0B;AAAC,YAAS,KAAV;AAAgB,iBAAc;AAA9B,CAA1B;AAEA,IAAMC,IAAI,GAAGN,IAAI,CAACM,IAAL,IAAa,EAA1B;;AACE,IAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACrB,MAAMC,UAAU,GAAG,6FAAnB;AACAC,EAAAA,OAAO,CAACC,KAAR,IAAiBD,OAAO,CAACC,KAAR,CAAe,YAAf,EAA6BF,UAA7B,CAAjB;AACAF,EAAAA,IAAI,CAACK,OAAL,CAAa,UAAAC,MAAM;AAAA,WAAI,CAACH,OAAO,CAACG,MAAM,CAACC,IAAR,CAAP,IAAwBJ,OAAO,CAACK,GAAjC,mCAAyCF,MAAM,CAACG,IAAhD,EAAJ;AAAA,GAAnB;AACA,SAAOf,IAAI,CAACM,IAAZ;AACAG,EAAAA,OAAO,CAACO,QAAR,IAAoBP,OAAO,CAACO,QAAR,EAApB;AACD,C,CAED;;;AACA,IAAI,CAACnC,GAAG,CAACwB,MAAJ,CAAWY,KAAhB,EAAuB;AACrB,MAAMC,mBAAmB,GAAGrC,GAAG,CAACwB,MAAJ,CAAWc,YAAvC;;AACAtC,EAAAA,GAAG,CAACwB,MAAJ,CAAWc,YAAX,GAA0B,UAACC,GAAD,EAAMC,EAAN,EAAUC,IAAV,EAA4B;AACpD;AACA,QAAIC,OAAO,GAAG,IAAd;;AACA,QAAI,OAAOL,mBAAP,KAA+B,UAAnC,EAA+C;AAAA,wCAHJM,IAGI;AAHJA,QAAAA,IAGI;AAAA;;AAC7CD,MAAAA,OAAO,GAAGL,mBAAmB,MAAnB,UAAoBE,GAApB,EAAyBC,EAAzB,EAA6BC,IAA7B,SAAsCE,IAAtC,EAAV;AACD;;AACD,QAAID,OAAO,KAAK,IAAhB,EAAsB;AACpB,aAAOA,OAAP;AACD;;AAED,QAAIF,EAAE,IAAIA,EAAE,CAACI,KAAb,EAAoB;AAClB,UAAMC,OAAO,GAAGvB,MAAM,CAACwB,IAAP,CAAY9C,GAAG,CAACwB,MAAJ,CAAWY,KAAvB,EACbW,IADa,CACR,UAAAC,YAAY;AAAA,eAAIR,EAAE,CAACI,KAAH,CAASI,YAAT,CAAJ;AAAA,OADJ,CAAhB,CADkB,CAIlB;;AACA,UAAIH,OAAO,IAAIL,EAAE,CAACI,KAAH,CAASC,OAAT,EAAkBI,KAA7B,IAAsCR,IAAI,KAAK,iBAAnD,EAAsE;AACpED,QAAAA,EAAE,CAACI,KAAH,CAASC,OAAT,EAAkBI,KAAlB,CAAwBV,GAAxB;AACD;AACF;;AAED,QAAI,OAAOF,mBAAP,KAA+B,UAAnC,EAA+C;AAC7C,aAAOK,OAAP;AACD,KAtBmD,CAwBpD;;;AACA,QAAIQ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCxB,MAAAA,OAAO,CAACqB,KAAR,CAAcV,GAAd;AACD,KAFD,MAEO;AACLX,MAAAA,OAAO,CAACqB,KAAR,CAAcV,GAAG,CAACc,OAAJ,IAAed,GAA7B;AACD;AACF,GA9BD;;AA+BAvC,EAAAA,GAAG,CAACwB,MAAJ,CAAWY,KAAX,GAAmB,EAAnB;AACD;;AACDpC,GAAG,CAACwB,MAAJ,CAAWY,KAAX,CAAiBA,KAAjB,GAAyB,IAAzB;AAEA,IAAME,YAAY,GAAGtC,GAAG,CAACwB,MAAJ,CAAWc,YAAX,IAA2BV,OAAO,CAACqB,KAAxD,C,CAEA;;AACAtC,SAAS,GAAG2C,IAAZ,CAAiBC,QAAjB,EAA2BC,KAA3B,CAAiClB,YAAjC;;AAEA,SAASmB,eAAT,CAA0B3C,SAA1B,EAAqC4C,GAArC,EAAmD;AACjD,MAAI,CAAC5C,SAAD,IAAc,CAACA,SAAS,CAAC6C,OAAzB,IAAoC,CAAC7C,SAAS,CAAC6C,OAAV,CAAkBD,GAAlB,CAAzC,EAAiE;AAC/D,WAAO,EAAP;AACD;;AACD,MAAME,MAAM,GAAG9C,SAAS,CAAC6C,OAAV,CAAkBD,GAAlB,CAAf;;AACA,MAAI,OAAOE,MAAP,KAAkB,UAAtB,EAAkC;AAAA,uCALS1B,IAKT;AALSA,MAAAA,IAKT;AAAA;;AAChC,WAAO0B,MAAM,MAAN,SAAU1B,IAAV,CAAP;AACD;;AACD,SAAO0B,MAAP;AACD;;AAED,SAASC,cAAT,CAAyBC,YAAzB,EAAuCC,EAAvC,EAA2CC,IAA3C,EAAiD;AAC/C,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACnD,SAAD,EAAe;AAC1C,QAAMoD,UAAU,GAAGT,eAAe,CAAC3C,SAAD,EAAY,YAAZ,EAA0BiD,EAA1B,EAA8BC,IAA9B,CAAf,IAAsD,EAAzE;AACA,WAAQ,OAAOE,UAAP,KAAsB,QAAtB,GAAiC;AAAEnD,MAAAA,IAAI,EAAEmD;AAAR,KAAjC,GAAwDA,UAAhE;AACD,GAHD;;AAKA,MAAMC,cAAc,GAAGH,IAAI,GAAG7D,oBAAoB,CAAC6D,IAAD,CAAvB,GAAgC,EAA3D;AACA,MAAMI,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASR,YAAY,CAACpC,MAAtB,EAA8ByC,cAAc,CAACzC,MAA7C,CAAjB;AAEA,MAAM6C,iBAAiB,GAAG,EAA1B;;AAT+C,6BAUtCC,CAVsC;AAW7C;AACA,QAAMC,aAAa,GAAGnD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB0C,oBAAoB,CAACH,YAAY,CAACU,CAAD,CAAb,CAAtC,CAAtB;AACA,QAAME,WAAW,GAAGpD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB0C,oBAAoB,CAACE,cAAc,CAACK,CAAD,CAAf,CAAtC,CAApB,CAb6C,CAe7C;;AACAlD,IAAAA,MAAM,CAACwB,IAAP,CAAY2B,aAAZ,EACKE,MADL,CACY,UAAAjB,GAAG;AAAA,aAAI,OAAOe,aAAa,CAACf,GAAD,CAApB,KAA8B,WAA9B,IAA6C,CAACA,GAAG,CAACkB,WAAJ,GAAkBC,QAAlB,CAA2B,OAA3B,CAAlD;AAAA,KADf,EAEK/C,OAFL,CAEa,UAAC4B,GAAD,EAAS;AAAEgB,MAAAA,WAAW,CAAChB,GAAD,CAAX,GAAmBe,aAAa,CAACf,GAAD,CAAhC;AAAuC,KAF/D;AAIAa,IAAAA,iBAAiB,CAACO,IAAlB,CAAuBJ,WAAvB;AApB6C;;AAU/C,OAAK,IAAIF,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACJ,QAAhB,EAA0BI,CAAC,EAA3B,EAA+B;AAAA,UAAtBA,CAAsB;AAW9B;;AACD,SAAOD,iBAAP;AACD;;SAEcQ,mB;;;;;iFAAf,kBAAoChB,EAApC,EAAwCC,IAAxC,EAA8CgB,IAA9C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AACA,iBAAKC,YAAL,GAAoBC,OAAO,CAACjE,GAAG,CAACkE,IAAJ,CAAS5C,GAAV,CAAP,IAAyByB,IAAI,CAACoB,IAAL,KAAcrB,EAAE,CAACqB,IAA9D;AACA,iBAAKC,aAAL,GAAqBC,IAAI,CAACC,SAAL,CAAexB,EAAE,CAACyB,KAAlB,MAA6BF,IAAI,CAACC,SAAL,CAAevB,IAAI,CAACwB,KAApB,CAAlD;AACA,iBAAKC,UAAL,GAAmB,KAAKJ,aAAL,GAAqB5E,YAAY,CAACsD,EAAE,CAACyB,KAAJ,EAAWxB,IAAI,CAACwB,KAAhB,CAAjC,GAA0D,EAA7E;;AAEA,gBAAI,KAAKP,YAAL,IAAqB,KAAKS,QAAL,CAAcC,KAAnC,IAA4C,CAAC,KAAKD,QAAL,CAAcE,MAA/D,EAAuE;AACrE,mBAAKF,QAAL,CAAcC,KAAd;AACD;;AARH;;AAAA,kBAWQ,CAAC,KAAKV,YAAN,IAAsB,KAAKI,aAXnC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAY+BnF,sBAAsB,CAC7C6D,EAD6C,EAE7C,UAAC8B,SAAD,EAAYC,QAAZ;AAAA,qBAA0B;AAAED,gBAAAA,SAAS,EAATA,SAAF;AAAaC,gBAAAA,QAAQ,EAARA;AAAb,eAA1B;AAAA,aAF6C,CAZrD;;AAAA;AAYYC,YAAAA,UAZZ;AAgBM;AACMC,YAAAA,WAjBZ,GAiB0BD,UAAU,CAACE,IAAX,CAAgB,iBAA6B;AAAA,kBAA1BJ,SAA0B,SAA1BA,SAA0B;AAAA,kBAAfC,QAAe,SAAfA,QAAe;AAC/D,kBAAMI,UAAU,GAAGL,SAAS,CAAClC,OAAV,CAAkBuC,UAArC;;AACA,kBAAIA,UAAU,KAAK,IAAnB,EAAyB;AACvB,uBAAO,IAAP;AACD;;AACD,kBAAIC,KAAK,CAACC,OAAN,CAAcF,UAAd,CAAJ,EAA+B;AAC7B,uBAAOA,UAAU,CAACD,IAAX,CAAgB,UAAAvC,GAAG;AAAA,yBAAI,MAAI,CAAC+B,UAAL,CAAgB/B,GAAhB,CAAJ;AAAA,iBAAnB,CAAP;AACD;;AACD,kBAAI,OAAOwC,UAAP,KAAsB,UAA1B,EAAsC;AACpC,uBAAOA,UAAU,CAACG,KAAX,CAAiBP,QAAjB,EAA2B,CAAC/B,EAAE,CAACyB,KAAJ,EAAWxB,IAAI,CAACwB,KAAhB,CAA3B,CAAP;AACD;;AACD,qBAAO,KAAP;AACD,aAZmB,CAjB1B;;AA8BM,gBAAIQ,WAAW,IAAI,KAAKN,QAAL,CAAcC,KAA7B,IAAsC,CAAC,KAAKD,QAAL,CAAcE,MAAzD,EAAiE;AAC/D,mBAAKF,QAAL,CAAcC,KAAd;AACD;;AAhCP;AAmCI;AACAX,YAAAA,IAAI;AApCR;AAAA;;AAAA;AAAA;AAAA;AAsCUzC,YAAAA,GAtCV,GAsCgB,gBAAS,EAtCzB;AAuCU+D,YAAAA,UAvCV,GAuCuB/D,GAAG,CAAC+D,UAAJ,IAAkB/D,GAAG,CAACgE,MAAtB,IAAiChE,GAAG,CAACiE,QAAJ,IAAgBjE,GAAG,CAACiE,QAAJ,CAAaD,MAA9D,IAAyE,GAvChG;AAwCUlD,YAAAA,OAxCV,GAwCoBd,GAAG,CAACc,OAAJ,IAAe,EAxCnC,EA0CI;AACA;;AA3CJ,iBA4CQ,uCAAuCoD,IAAvC,CAA4CpD,OAA5C,CA5CR;AAAA;AAAA;AAAA;;AA6CMjC,YAAAA,MAAM,CAACsF,QAAP,CAAgBC,MAAhB,CAAuB;AAAK;AAA5B;AA7CN;;AAAA;AAiDI,iBAAK1D,KAAL,CAAW;AAAEqD,cAAAA,UAAU,EAAVA,UAAF;AAAcjD,cAAAA,OAAO,EAAPA;AAAd,aAAX;AACA,iBAAKjB,KAAL,CAAWwE,KAAX,CAAiB,cAAjB,EAAiC7C,EAAjC,EAAqCC,IAArC,EAA2CzB,GAA3C;AACAyC,YAAAA,IAAI;;AAnDR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAuDA,SAAS6B,YAAT,CAAuBhB,SAAvB,EAAkCiB,OAAlC,EAA2C;AACzCjB,EAAAA,SAAS,CAACkB,KAAV,GAAkBlB,SAAlB;AACA,SAAOA,SAAP;AACD,C,CAED;;;AACA,SAASmB,iBAAT,CAA4B9F,MAA5B,EAAoC;AAClC,MAAMkE,IAAI,GAAG7E,WAAW,CAACW,MAAM,CAACyC,OAAP,CAAesD,IAAhB,EAAsB/F,MAAM,CAACyC,OAAP,CAAeuD,IAArC,CAAxB;AAEA,SAAO7G,iBAAiB,CAACa,MAAM,CAACiG,KAAP,CAAa/B,IAAb,CAAD;AAAA,uEAAqB,iBAAOS,SAAP,EAAkBuB,CAAlB,EAAqBD,KAArB,EAA4BzD,GAA5B,EAAiC2D,KAAjC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEvC,OAAOxB,SAAP,KAAqB,UAArB,IAAmC,CAACA,SAAS,CAAClC,OAFP;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAGvBkC,SAAS,EAHc;;AAAA;AAGzCA,cAAAA,SAHyC;;AAAA;AAK3C;AACMyB,cAAAA,UANqC,GAMxBT,YAAY,CAAC5G,iBAAiB,CAAC4F,SAAD,CAAlB,EAA+B1E,IAAI,CAACoG,IAAL,GAAYpG,IAAI,CAACoG,IAAL,CAAUF,KAAV,CAAZ,GAA+B,IAA9D,CANY;AAO3CF,cAAAA,KAAK,CAACK,UAAN,CAAiB9D,GAAjB,IAAwB4D,UAAxB;AAP2C,+CAQpCA,UARoC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArB;;AAAA;AAAA;AAAA;AAAA,MAAxB;AAUD;;AAED,SAASG,cAAT,GAA2B;AACzB,SAAOC,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACD;;SAEcC,M;;EAsGf;;;;oEAtGA,kBAAuB7D,EAAvB,EAA2BC,IAA3B,EAAiCgB,IAAjC;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM,KAAKC,YAAL,KAAsB,KAAtB,IAA+B,KAAKI,aAAL,KAAuB,KAD5D;AAAA;AAAA;AAAA;;AAAA,8CAEWL,IAAI,EAFf;;AAAA;AAIE;AACA,gBAAIjB,EAAE,KAAKC,IAAX,EAAiB;AACfhD,cAAAA,UAAU,GAAG,EAAb;AACD,aAFD,MAEO;AACC6G,cAAAA,WADD,GACe,EADf;AAEL7G,cAAAA,UAAU,GAAGb,oBAAoB,CAAC6D,IAAD,EAAO6D,WAAP,CAApB,CAAwCC,GAAxC,CAA4C,UAACjC,SAAD,EAAYrB,CAAZ,EAAkB;AACzE,uBAAOhE,OAAO,CAACwD,IAAI,CAAC+D,OAAL,CAAaF,WAAW,CAACrD,CAAD,CAAxB,EAA6BY,IAA9B,CAAP,CAA2CpB,IAAI,CAACgE,MAAhD,CAAP;AACD,eAFY,CAAb;AAGD,aAZH,CAcE;;;AACIC,YAAAA,UAfN,GAemB,KAfnB;;AAgBQC,YAAAA,KAhBR,GAgBgB,SAARA,KAAQ,CAAC9C,IAAD,EAAU;AACtB,kBAAIpB,IAAI,CAACoB,IAAL,KAAcA,IAAI,CAACA,IAAnB,IAA2B,MAAI,CAACM,QAAL,CAAcyC,MAA7C,EAAqD;AACnD,gBAAA,MAAI,CAACzC,QAAL,CAAcyC,MAAd;AACD;;AAED,kBAAInE,IAAI,CAACoB,IAAL,KAAcA,IAAI,CAACA,IAAnB,IAA2B,MAAI,CAACM,QAAL,CAAc0C,KAA7C,EAAoD;AAClD,gBAAA,MAAI,CAAC1C,QAAL,CAAc0C,KAAd;AACD;;AAED,kBAAIH,UAAJ,EAAgB;AACd;AACD;;AAEDA,cAAAA,UAAU,GAAG,IAAb;AACAjD,cAAAA,IAAI,CAACI,IAAD,CAAJ;AACD,aA/BH,EAiCE;;;AAjCF;AAAA,mBAkCQ9E,UAAU,CAACW,GAAD,EAAM;AACpBoH,cAAAA,KAAK,EAAEtE,EADa;AAEpBC,cAAAA,IAAI,EAAJA,IAFoB;AAGpBgB,cAAAA,IAAI,EAAEkD,KAAK,CAACI,IAAN,CAAW,IAAX;AAHc,aAAN,CAlClB;;AAAA;AAuCE,iBAAKC,cAAL,GAAsBtH,GAAG,CAACkE,IAAJ,CAASqD,OAA/B;AACA,iBAAKC,SAAL,GAAiBvD,OAAO,CAACjE,GAAG,CAACkE,IAAJ,CAAS5C,GAAV,CAAxB,CAxCF,CA0CE;;AACMmG,YAAAA,OA3CR,GA2CkB,EA3ClB;AA4CQ3C,YAAAA,UA5CR,GA4CqB5F,oBAAoB,CAAC4D,EAAD,EAAK2E,OAAL,CA5CzC,EA8CE;;AA9CF,gBA+CO3C,UAAU,CAACrE,MA/ClB;AAAA;AAAA;AAAA;;AAgDI;AACMiH,YAAAA,WAjDV,GAiDwB,CAAC/H,SAAS,CAAC+C,OAAV,IAAqB/C,SAAtB,EAAiCgI,MAjDzD;AAAA;AAAA,mBAkDyB,KAAKC,UAAL,CACnB,OAAOF,WAAP,KAAuB,UAAvB,GACIA,WAAW,CAACG,IAAZ,CAAiBlI,SAAjB,EAA4BK,GAAG,CAAC8H,OAAhC,CADJ,GAEIJ,WAHe,CAlDzB;;AAAA;AAkDUC,YAAAA,MAlDV;AAwDI;AACA3H,YAAAA,GAAG,CAAC8H,OAAJ,CAAY9F,KAAZ,CAAkB;AAAEqD,cAAAA,UAAU,EAAE,GAAd;AAAmBjD,cAAAA,OAAO,EAAE;AAA5B,aAAlB;AAzDJ,8CA0DW2B,IAAI,EA1Df;;AAAA;AA6DE;AACA,iBAAKgE,cAAL,CAAoBnF,cAAc,CAACkC,UAAD,EAAahC,EAAb,EAAiBC,IAAjB,CAAlC;AA9DF;AAiEI;AACI4E,YAAAA,OAlER,GAkEiB7C,UAAU,CAAC,CAAD,CAAV,CAAcpC,OAAd,CAAsBiF,MAlEvC;;AAmEI,gBAAI,OAAOA,OAAP,KAAkB,UAAtB,EAAkC;AAChCA,cAAAA,OAAM,GAAGA,OAAM,CAAC3H,GAAG,CAAC8H,OAAL,CAAf;AACD;;AArEL;AAAA,mBAsEmB,KAAKF,UAAL,CAAgBD,OAAhB,CAtEnB;;AAAA;AAsEIA,YAAAA,OAtEJ;;AAwEI;AACA,gBAAI,CAACX,UAAL,EAAiB;AACf,kBAAI,KAAKvC,QAAL,CAAcyC,MAAd,IAAwB,CAAC,KAAKzC,QAAL,CAAcE,MAA3C,EAAmD;AACjD,qBAAKF,QAAL,CAAcyC,MAAd;AACD;;AAEDnD,cAAAA,IAAI;AACL;;AA/EL;AAAA;;AAAA;AAAA;AAAA;AAiFU/B,YAAAA,KAjFV,GAiFkB,gBAAO,EAjFzB;;AAAA,kBAkFQA,KAAK,CAACI,OAAN,KAAkB,cAlF1B;AAAA;AAAA;AAAA;;AAAA,8CAmFa,KAAKjB,KAAL,CAAWwE,KAAX,CAAiB,cAAjB,EAAiC7C,EAAjC,EAAqCC,IAArC,EAA2Cf,KAA3C,CAnFb;;AAAA;AAqFIjC,YAAAA,UAAU,GAAG,EAAb;AAEAN,YAAAA,iBAAiB,CAACuC,KAAD,CAAjB,CAvFJ,CAyFI;;AACI2F,YAAAA,QA1FR,GA0FiB,CAAChI,SAAS,CAAC+C,OAAV,IAAqB/C,SAAtB,EAAiCgI,MA1FlD;;AA2FI,gBAAI,OAAOA,QAAP,KAAkB,UAAtB,EAAkC;AAChCA,cAAAA,QAAM,GAAGA,QAAM,CAAC3H,GAAG,CAAC8H,OAAL,CAAf;AACD;;AA7FL;AAAA,mBA8FU,KAAKF,UAAL,CAAgBD,QAAhB,CA9FV;;AAAA;AAgGI,iBAAK3F,KAAL,CAAWA,KAAX;AACA,iBAAKb,KAAL,CAAWwE,KAAX,CAAiB,cAAjB,EAAiC7C,EAAjC,EAAqCC,IAArC,EAA2Cf,KAA3C;AACA+B,YAAAA,IAAI;;AAlGR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAuGA,SAASiE,mBAAT,CAA8BlF,EAA9B,EAAkCmF,GAAlC,EAAuC;AACrC7I,EAAAA,iBAAiB,CAAC0D,EAAD,EAAK,UAAC8B,SAAD,EAAYuB,CAAZ,EAAeD,KAAf,EAAsBzD,GAAtB,EAA8B;AAClD,QAAI,QAAOmC,SAAP,MAAqB,QAArB,IAAiC,CAACA,SAAS,CAAClC,OAAhD,EAAyD;AACvD;AACAkC,MAAAA,SAAS,GAAG7F,GAAG,CAACmJ,MAAJ,CAAWtD,SAAX,CAAZ;AACAA,MAAAA,SAAS,CAACkB,KAAV,GAAkBlB,SAAlB;AACAsB,MAAAA,KAAK,CAACK,UAAN,CAAiB9D,GAAjB,IAAwBmC,SAAxB;AACD;;AACD,WAAOA,SAAP;AACD,GARgB,CAAjB;AASD;;AAED,SAASuD,YAAT,CAAuBrF,EAAvB,EAA2B;AACzB;AACA,MAAI,KAAK0E,SAAL,IAAkB,KAAKF,cAAL,KAAwB,KAAKc,QAAL,CAAclE,IAAd,CAAmBqD,OAAjE,EAA0E;AACxE,SAAKvF,KAAL;AACD,GAJwB,CAMzB;;;AACA,MAAI2F,MAAM,GAAG,KAAKS,QAAL,CAAclE,IAAd,CAAmB5C,GAAnB,GACT,CAAC3B,SAAS,CAAC+C,OAAV,IAAqB/C,SAAtB,EAAiCgI,MADxB,GAET7E,EAAE,CAACgE,OAAH,CAAW,CAAX,EAAcP,UAAd,CAAyB8B,OAAzB,CAAiC3F,OAAjC,CAAyCiF,MAF7C;;AAIA,MAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAChCA,IAAAA,MAAM,GAAGA,MAAM,CAAC3H,GAAG,CAAC8H,OAAL,CAAf;AACD;;AACD,OAAKQ,SAAL,CAAeX,MAAf;AACD,C,CAED;AACA;;;AACA,SAASY,WAAT,CAAsBzF,EAAtB,EAA0BmF,GAA1B,EAA+B;AAAA;;AAC7B,MAAI,KAAKjE,YAAL,KAAsB,KAAtB,IAA+B,KAAKI,aAAL,KAAuB,KAA1D,EAAiE;AAC/D;AACD;;AAED,MAAMoE,SAAS,GAAGrJ,6BAA6B,CAAC2D,EAAD,CAA/C;AACA,MAAMgC,UAAU,GAAG5F,oBAAoB,CAAC4D,EAAD,CAAvC;AAEA/D,EAAAA,GAAG,CAAC0J,QAAJ,CAAa,YAAM;AACjBD,IAAAA,SAAS,CAAC3H,OAAV,CAAkB,UAACgE,QAAD,EAAWtB,CAAX,EAAiB;AACjC,UAAI,CAACsB,QAAD,IAAaA,QAAQ,CAAC6D,YAA1B,EAAwC;AACtC;AACD;;AAED,UACE7D,QAAQ,CAAC8D,WAAT,CAAqBC,YAArB,IACA9D,UAAU,CAACvB,CAAD,CAAV,KAAkBsB,QAAQ,CAAC8D,WAD3B,IAEA9D,QAAQ,CAACgE,MAAT,CAAgBvC,IAAhB,CAAqBwC,SAArB,KAAmC,IAFnC,IAGA,OAAOjE,QAAQ,CAAC8D,WAAT,CAAqBjG,OAArB,CAA6B4D,IAApC,KAA6C,UAJ/C,EAKE;AACA,YAAMyC,OAAO,GAAGlE,QAAQ,CAAC8D,WAAT,CAAqBjG,OAArB,CAA6B4D,IAA7B,CAAkCuB,IAAlC,CAAuChD,QAAvC,CAAhB;;AACA,aAAK,IAAMpC,GAAX,IAAkBsG,OAAlB,EAA2B;AACzBhK,UAAAA,GAAG,CAACiK,GAAJ,CAAQnE,QAAQ,CAACoE,KAAjB,EAAwBxG,GAAxB,EAA6BsG,OAAO,CAACtG,GAAD,CAApC;AACD,SAJD,CAMA;;;AACAtC,QAAAA,MAAM,CAACgB,KAAP,CAAa+H,SAAb,CAAuB,YAAM;AAC3B/I,UAAAA,MAAM,CAACgB,KAAP,CAAawE,KAAb,CAAmB,eAAnB;AACD,SAFD;AAGD;AACF,KArBD;AAsBAwC,IAAAA,YAAY,CAACN,IAAb,CAAkB,KAAlB,EAAwB/E,EAAxB,EAvBiB,CAyBjB;;AACAqG,IAAAA,UAAU,CAAC;AAAA,aAAMC,YAAY,CAAC,KAAD,CAAlB;AAAA,KAAD,EAA2B,GAA3B,CAAV;AACD,GA3BD;AA4BD;;AAED,SAASC,SAAT,CAAoBC,IAApB,EAA0B;AACxBnJ,EAAAA,MAAM,CAACoJ,cAAP,CAAsB1I,OAAtB,CAA8B,UAAC2I,EAAD,EAAQ;AACpC,QAAI,OAAOA,EAAP,KAAc,UAAlB,EAA8B;AAC5BA,MAAAA,EAAE,CAACF,IAAD,CAAF;AACD;AACF,GAJD,EADwB,CAMxB;;AACA,MAAI,OAAOnJ,MAAM,CAACsJ,aAAd,KAAgC,UAApC,EAAgD;AAC9CtJ,IAAAA,MAAM,CAACsJ,aAAP,CAAqBH,IAArB;AACD,GATuB,CAUxB;;;AACArJ,EAAAA,MAAM,CAACyJ,SAAP,CAAiB,UAAC5G,EAAD,EAAKC,IAAL,EAAc;AAC7B;AACAhE,IAAAA,GAAG,CAAC0J,QAAJ,CAAa;AAAA,aAAMa,IAAI,CAACnI,KAAL,CAAWwE,KAAX,CAAiB,cAAjB,EAAiC7C,EAAjC,EAAqCC,IAArC,CAAN;AAAA,KAAb;AACD,GAHD;AAID;;AAED,IAAM4G,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAE,SAAO,EAAP;AAAW,CAApC;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM,CAAE,CAA1B,C,CAEA;;;AACA,SAASC,sBAAT,CAAiCC,OAAjC,EAA4D;AAAA,MAAlBC,WAAkB,uEAAJ,EAAI;AAC1DD,EAAAA,OAAO,CAACE,SAAR,CAAkBnJ,OAAlB,CAA0B,UAACoJ,MAAD,EAAY;AACpC,QAAIA,MAAM,CAACpB,MAAP,IAAiBoB,MAAM,CAACpB,MAAP,CAAcvC,IAAd,CAAmB4D,SAApC,IAAiD,CAACH,WAAW,CAACjI,IAAZ,CAAiB,UAAAqI,CAAC;AAAA,aAAIA,CAAC,CAAC/B,QAAF,CAAWgC,MAAX,KAAsBH,MAAM,CAAC7B,QAAP,CAAgBgC,MAA1C;AAAA,KAAlB,CAAtD,EAA4H;AAC1HL,MAAAA,WAAW,CAAClG,IAAZ,CAAiBoG,MAAjB;AACD;;AACD,QAAIA,MAAM,CAACD,SAAP,IAAoBC,MAAM,CAACD,SAAP,CAAiBvJ,MAAzC,EAAiD;AAC/CoJ,MAAAA,sBAAsB,CAACI,MAAD,EAASF,WAAT,CAAtB;AACD;AACF,GAPD;AASA,SAAOA,WAAP;AACD;;AAED,SAASX,YAAT,CAAsBE,IAAtB,EAA4B;AAC1B,MAAI,CAACe,MAAM,CAACC,GAAZ,EAAiB;AAEjB,MAAIP,WAAW,GAAGF,sBAAsB,CAACP,IAAI,CAACnI,KAAN,EAAa,EAAb,CAAxC;AAEA4I,EAAAA,WAAW,CAAClJ,OAAZ,CAAoB0J,YAAY,CAAClD,IAAb,CAAkBiC,IAAlB,CAApB;AACD;;AAED,SAASiB,YAAT,CAAuBC,UAAvB,EAAmCC,KAAnC,EAA0C;AAAA;;AACxC,MAAID,UAAU,CAAC3B,MAAX,CAAkBvC,IAAlB,CAAuBoE,aAA3B,EAA0C;AAC1CF,EAAAA,UAAU,CAAC3B,MAAX,CAAkBvC,IAAlB,CAAuBoE,aAAvB,GAAuC,IAAvC;;AAEA,MAAIC,YAAY,GAAGH,UAAU,CAACI,YAAX,CAAwBvD,IAAxB,CAA6BmD,UAAU,CAACV,OAAxC,CAAnB;;AAEAU,EAAAA,UAAU,CAAC3B,MAAX,CAAkBf,OAAlB,CAA0B8C,YAA1B,wEAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AACnC9F,YAAAA,UADmC,GACtB5F,oBAAoB,CAACe,MAAM,CAAC4K,YAAR,CADE;AAEnCjG,YAAAA,SAFmC,GAEvBE,UAAU,CAAC2F,KAAD,CAFa;;AAAA,gBAGlC7F,SAHkC;AAAA;AAAA;AAAA;;AAAA,8CAI9B+F,YAAY,EAJkB;;AAAA;AAMvC,gBAAI,QAAO/F,SAAP,MAAqB,QAArB,IAAiC,CAACA,SAAS,CAAClC,OAAhD,EAAyD;AACvD;AACAkC,cAAAA,SAAS,GAAG7F,GAAG,CAACmJ,MAAJ,CAAWtD,SAAX,CAAZ;AACAA,cAAAA,SAAS,CAACkB,KAAV,GAAkBlB,SAAlB;AACD;;AACD,YAAA,MAAI,CAAC5C,KAAL;;AACI8I,YAAAA,QAZmC,GAYxB,EAZwB;;AAajC/G,YAAAA,IAbiC,GAa1B,SAAPA,IAAO,CAAUI,IAAV,EAAgB;AAC3B,mBAAKM,QAAL,CAAcyC,MAAd,IAAwB,KAAKzC,QAAL,CAAcyC,MAAd,EAAxB;AACAjH,cAAAA,MAAM,CAAC4D,IAAP,CAAYM,IAAZ;AACD,aAhBsC;;AAAA;AAAA,mBAiBjC9E,UAAU,CAACW,GAAD,EAAM;AACpBoH,cAAAA,KAAK,EAAEnH,MAAM,CAAC4K,YADM;AAEpBE,cAAAA,KAAK,EAAE,IAFa;AAGpBhH,cAAAA,IAAI,EAAEA,IAAI,CAACsD,IAAL,CAAU,MAAV;AAHc,aAAN,CAjBuB;;AAAA;AAsBjCS,YAAAA,OAtBiC,GAsBvB9H,GAAG,CAAC8H,OAtBmB;;AAwBvC,gBAAI,MAAI,CAACrD,QAAL,CAAcC,KAAd,IAAuB,CAAC,MAAI,CAACD,QAAL,CAAcE,MAA1C,EAAkD;AAChD,cAAA,MAAI,CAACF,QAAL,CAAcC,KAAd;AACD;;AAED8B,YAAAA,cAAc,CAACqB,IAAf,CAAoB,MAApB,EAA0B/C,UAA1B,EAAsCgD,OAAtC,EACCzF,IADD,CACM,YAAM;AACV;AACA,kBAAIoI,KAAK,KAAK,CAAd,EAAiB;AACf;AACD;;AAED,kBAAI9C,MAAM,GAAG/C,SAAS,CAAClC,OAAV,CAAkBiF,MAAlB,IAA4B,SAAzC;;AACA,kBAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAChCA,gBAAAA,MAAM,GAAGA,MAAM,CAACG,OAAD,CAAf;AACD;;AACD,kBAAI,MAAI,CAACkD,UAAL,KAAoBrD,MAAxB,EAAgC;AAC9B;AACD;;AACD,kBAAIsD,OAAO,GAAG,MAAI,CAACrD,UAAL,CAAgBD,MAAhB,CAAd;;AACAsD,cAAAA,OAAO,CAAC5I,IAAR,CAAa,YAAM;AACjB,gBAAA,MAAI,CAACiG,SAAL,CAAeX,MAAf;;AACA5I,gBAAAA,GAAG,CAAC0J,QAAJ,CAAa;AAAA,yBAAMW,YAAY,CAAC,MAAD,CAAlB;AAAA,iBAAb;AACD,eAHD;AAIA,qBAAO6B,OAAP;AACD,aApBD,EAsBC5I,IAtBD,CAsBM,YAAM;AACV,qBAAOmE,cAAc,CAACqB,IAAf,CAAoB,MAApB,EAA0B/C,UAA1B,EAAsCgD,OAAtC,EAA+C,MAAI,CAACH,MAApD,CAAP;AACD,aAxBD,EA0BCtF,IA1BD,CA0BM,YAAM;AACV,qBAAOoE,OAAO,CAACyE,GAAR,CAAYJ,QAAZ,CAAP;AACD,aA5BD,EA6BCzI,IA7BD,CA6BM,YAAM;AACV,cAAA,MAAI,CAACoC,QAAL,CAAcyC,MAAd,IAAwB,MAAI,CAACzC,QAAL,CAAcyC,MAAd,EAAxB;;AACAyD,cAAAA,YAAY;;AACZxB,cAAAA,UAAU,CAAC;AAAA,uBAAMC,YAAY,CAAC,MAAD,CAAlB;AAAA,eAAD,EAA2B,GAA3B,CAAV;AACD,aAjCD;;AA5BuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzC;AA+DD;;SAEc9G,Q;;;;;sEAAf,kBAAyB6I,KAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACE;AACAnL,YAAAA,GAAG,GAAGmL,KAAK,CAACnL,GAAZ;AACAC,YAAAA,MAAM,GAAGkL,KAAK,CAAClL,MAAf,CAHF,CAKE;;AACMqJ,YAAAA,IANR,GAMe,IAAIvK,GAAJ,CAAQiB,GAAR,CANf,EAQE;;AACM2H,YAAAA,MATR,GASiBzH,IAAI,CAACyH,MAAL,IAAe,SAThC;AAAA;AAAA,mBAUQ2B,IAAI,CAAC1B,UAAL,CAAgBD,MAAhB,CAVR;;AAAA;AAWE2B,YAAAA,IAAI,CAAChB,SAAL,CAAeX,MAAf,EAXF,CAaE;;;AACMyD,YAAAA,KAdR,GAcgB,SAARA,KAAQ,GAAM;AAClB9B,cAAAA,IAAI,CAAC+B,MAAL,CAAY,SAAZ,EADkB,CAGlB;;;AACApL,cAAAA,MAAM,CAACyJ,SAAP,CAAiB1B,mBAAjB;AACA/H,cAAAA,MAAM,CAACyJ,SAAP,CAAiBnB,WAAW,CAAClB,IAAZ,CAAiBiC,IAAjB,CAAjB,EALkB,CAOlB;;AACAvK,cAAAA,GAAG,CAAC0J,QAAJ,CAAa,YAAM;AACjB;AACAY,gBAAAA,SAAS,CAACC,IAAD,CAAT,CAFiB,CAIjB;;AACAF,gBAAAA,YAAY,CAACE,IAAD,CAAZ;AACD,eAND;AAOD,aA7BH,EA+BE;;;AA/BF;AAAA,mBAgC2B7C,OAAO,CAACyE,GAAR,CAAYnF,iBAAiB,CAAC9F,MAAD,CAA7B,CAhC3B;;AAAA;AAgCQ6E,YAAAA,UAhCR;AAkCE;AACAwE,YAAAA,IAAI,CAACvB,cAAL,GAAsBuB,IAAI,CAAClB,QAAL,CAAclE,IAAd,CAAmB6D,cAAnB,CAAkCV,IAAlC,CAAuCiC,IAAvC,CAAtB;;AACA,gBAAIxE,UAAU,CAACrE,MAAf,EAAuB;AACrB6I,cAAAA,IAAI,CAACvB,cAAL,CAAoBnF,cAAc,CAACkC,UAAD,EAAa7E,MAAM,CAAC4K,YAApB,CAAlC;;AACA9K,cAAAA,UAAU,GAAGE,MAAM,CAAC4K,YAAP,CAAoB/D,OAApB,CAA4BD,GAA5B,CAAgC,UAAAO,KAAK;AAAA,uBAAI7H,OAAO,CAAC6H,KAAK,CAACjD,IAAP,CAAP,CAAoBlE,MAAM,CAAC4K,YAAP,CAAoB9D,MAAxC,CAAJ;AAAA,eAArC,CAAb;AACD,aAvCH,CAyCE;;;AACAuC,YAAAA,IAAI,CAAC7E,QAAL,GAAgB,EAAhB,CA1CF,CA0CqB;;AACnB,gBAAIvE,IAAI,CAAC8B,KAAT,EAAgB;AACdsH,cAAAA,IAAI,CAACtH,KAAL,CAAW9B,IAAI,CAAC8B,KAAhB;AACD,aA7CH,CA+CE;;;AACA/B,YAAAA,MAAM,CAACqL,UAAP,CAAkBxH,mBAAmB,CAACuD,IAApB,CAAyBiC,IAAzB,CAAlB;AACArJ,YAAAA,MAAM,CAACqL,UAAP,CAAkB3E,MAAM,CAACU,IAAP,CAAYiC,IAAZ,CAAlB,EAjDF,CAmDE;;AAnDF,iBAoDMpJ,IAAI,CAACqL,cApDX;AAAA;AAAA;AAAA;;AAqDIH,YAAAA,KAAK;AArDT;;AAAA;AAyDE;AACMI,YAAAA,gBA1DR,GA0D2B,SAAnBA,gBAAmB,GAAM;AAC7BxD,cAAAA,mBAAmB,CAAC/H,MAAM,CAAC4K,YAAR,EAAsB5K,MAAM,CAAC4K,YAA7B,CAAnB;AACA1C,cAAAA,YAAY,CAACN,IAAb,CAAkByB,IAAlB,EAAwBrJ,MAAM,CAAC4K,YAA/B,EAF6B,CAG7B;;AACAO,cAAAA,KAAK;AACN,aA/DH;;AAiEEzE,YAAAA,MAAM,CAACkB,IAAP,CAAYyB,IAAZ,EAAkBrJ,MAAM,CAAC4K,YAAzB,EAAuC5K,MAAM,CAAC4K,YAA9C,EAA4D,UAAC1G,IAAD,EAAU;AACpE;AACA,kBAAI,CAACA,IAAL,EAAW;AACTqH,gBAAAA,gBAAgB;AAChB;AACD,eALmE,CAOpE;AACA;;;AACA,kBAAMC,cAAc,GAAGxL,MAAM,CAACyJ,SAAP,CAAiB,UAAC5G,EAAD,EAAKC,IAAL,EAAc;AACpD0I,gBAAAA,cAAc;AACdD,gBAAAA,gBAAgB;AACjB,eAHsB,CAAvB,CAToE,CAcpE;;AACAvL,cAAAA,MAAM,CAAC4D,IAAP,CAAYM,IAAZ,EAAkBuH,SAAlB,EAA6B,UAACpK,GAAD,EAAS;AACpC,oBAAIA,GAAJ,EAAS;AACPD,kBAAAA,YAAY,CAACC,GAAD,CAAZ;AACD;AACF,eAJD;AAKD,aApBD;;AAjEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import Vue from 'vue'\n\nimport {\n  sanitizeComponent,\n  resolveRouteComponents,\n  getMatchedComponents,\n  getMatchedComponentsInstances,\n  flatMapComponents,\n  setContext,\n  getLocation,\n  compile,\n  getQueryDiff,\n  globalHandleError\n} from './utils.js'\nimport { createApp, NuxtError } from './index.js'\n\nimport NuxtLink from './components/nuxt-link.client.js' // should be included after ./index.js\n\n// Component: <NuxtLink>\nVue.component(NuxtLink.name, NuxtLink)\n\n// Global shared references\nlet _lastPaths = []\nlet app\nlet router\n\n// Try to rehydrate SSR data from window\nconst NUXT = window.__NUXT__ || {}\n\nObject.assign(Vue.config, {\"silent\":false,\"performance\":true})\n\nconst logs = NUXT.logs || []\n  if (logs.length > 0) {\n  const ssrLogSyle = 'background: #2E495E;border-radius: 0.5em;color: white;font-weight: bold;padding: 2px 0.5em;'\n  console.group && console.group ('%cNuxt SSR', ssrLogSyle)\n  logs.forEach(logObj => (console[logObj.type] || console.log)(...logObj.args))\n  delete NUXT.logs\n  console.groupEnd && console.groupEnd()\n}\n\n// Setup global Vue error handler\nif (!Vue.config.$nuxt) {\n  const defaultErrorHandler = Vue.config.errorHandler\n  Vue.config.errorHandler = (err, vm, info, ...rest) => {\n    // Call other handler if exist\n    let handled = null\n    if (typeof defaultErrorHandler === 'function') {\n      handled = defaultErrorHandler(err, vm, info, ...rest)\n    }\n    if (handled === true) {\n      return handled\n    }\n\n    if (vm && vm.$root) {\n      const nuxtApp = Object.keys(Vue.config.$nuxt)\n        .find(nuxtInstance => vm.$root[nuxtInstance])\n\n      // Show Nuxt Error Page\n      if (nuxtApp && vm.$root[nuxtApp].error && info !== 'render function') {\n        vm.$root[nuxtApp].error(err)\n      }\n    }\n\n    if (typeof defaultErrorHandler === 'function') {\n      return handled\n    }\n\n    // Log to console\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(err)\n    } else {\n      console.error(err.message || err)\n    }\n  }\n  Vue.config.$nuxt = {}\n}\nVue.config.$nuxt.$nuxt = true\n\nconst errorHandler = Vue.config.errorHandler || console.error\n\n// Create and mount App\ncreateApp().then(mountApp).catch(errorHandler)\n\nfunction componentOption (component, key, ...args) {\n  if (!component || !component.options || !component.options[key]) {\n    return {}\n  }\n  const option = component.options[key]\n  if (typeof option === 'function') {\n    return option(...args)\n  }\n  return option\n}\n\nfunction mapTransitions (toComponents, to, from) {\n  const componentTransitions = (component) => {\n    const transition = componentOption(component, 'transition', to, from) || {}\n    return (typeof transition === 'string' ? { name: transition } : transition)\n  }\n\n  const fromComponents = from ? getMatchedComponents(from) : []\n  const maxDepth = Math.max(toComponents.length, fromComponents.length)\n\n  const mergedTransitions = []\n  for (let i=0; i<maxDepth; i++) {\n    // Clone original objects to prevent overrides\n    const toTransitions = Object.assign({}, componentTransitions(toComponents[i]))\n    const transitions = Object.assign({}, componentTransitions(fromComponents[i]))\n\n    // Combine transitions & prefer `leave` properties of \"from\" route\n    Object.keys(toTransitions)\n        .filter(key => typeof toTransitions[key] !== 'undefined' && !key.toLowerCase().includes('leave'))\n        .forEach((key) => { transitions[key] = toTransitions[key] })\n\n    mergedTransitions.push(transitions)\n  }\n  return mergedTransitions\n}\n\nasync function loadAsyncComponents (to, from, next) {\n  // Check if route path changed (this._pathChanged), only if the page is not an error (for validate())\n  this._pathChanged = Boolean(app.nuxt.err) || from.path !== to.path\n  this._queryChanged = JSON.stringify(to.query) !== JSON.stringify(from.query)\n  this._diffQuery = (this._queryChanged ? getQueryDiff(to.query, from.query) : [])\n\n  if (this._pathChanged && this.$loading.start && !this.$loading.manual) {\n    this.$loading.start()\n  }\n\n  try {\n    if (!this._pathChanged && this._queryChanged) {\n      const Components = await resolveRouteComponents(\n        to,\n        (Component, instance) => ({ Component, instance })\n      )\n      // Add a marker on each component that it needs to refresh or not\n      const startLoader = Components.some(({ Component, instance }) => {\n        const watchQuery = Component.options.watchQuery\n        if (watchQuery === true) {\n          return true\n        }\n        if (Array.isArray(watchQuery)) {\n          return watchQuery.some(key => this._diffQuery[key])\n        }\n        if (typeof watchQuery === 'function') {\n          return watchQuery.apply(instance, [to.query, from.query])\n        }\n        return false\n      })\n      if (startLoader && this.$loading.start && !this.$loading.manual) {\n        this.$loading.start()\n      }\n    }\n\n    // Call next()\n    next()\n  } catch (error) {\n    const err = error || {}\n    const statusCode = err.statusCode || err.status || (err.response && err.response.status) || 500\n    const message = err.message || ''\n\n    // Handle chunk loading errors\n    // This may be due to a new deployment or a network problem\n    if (/^Loading( CSS)? chunk (\\d)+ failed\\./.test(message)) {\n      window.location.reload(true /* skip cache */)\n      return // prevent error page blinking for user\n    }\n\n    this.error({ statusCode, message })\n    this.$nuxt.$emit('routeChanged', to, from, err)\n    next()\n  }\n}\n\nfunction applySSRData (Component, ssrData) {\n  Component._Ctor = Component\n  return Component\n}\n\n// Get matched components\nfunction resolveComponents (router) {\n  const path = getLocation(router.options.base, router.options.mode)\n\n  return flatMapComponents(router.match(path), async (Component, _, match, key, index) => {\n    // If component is not resolved yet, resolve it\n    if (typeof Component === 'function' && !Component.options) {\n      Component = await Component()\n    }\n    // Sanitize it and save it\n    const _Component = applySSRData(sanitizeComponent(Component), NUXT.data ? NUXT.data[index] : null)\n    match.components[key] = _Component\n    return _Component\n  })\n}\n\nfunction callMiddleware () {\n  return Promise.resolve(true)\n}\n\nasync function render (to, from, next) {\n  if (this._pathChanged === false && this._queryChanged === false) {\n    return next()\n  }\n  // Handle first render on SPA mode\n  if (to === from) {\n    _lastPaths = []\n  } else {\n    const fromMatches = []\n    _lastPaths = getMatchedComponents(from, fromMatches).map((Component, i) => {\n      return compile(from.matched[fromMatches[i]].path)(from.params)\n    })\n  }\n\n  // nextCalled is true when redirected\n  let nextCalled = false\n  const _next = (path) => {\n    if (from.path === path.path && this.$loading.finish) {\n      this.$loading.finish()\n    }\n\n    if (from.path !== path.path && this.$loading.pause) {\n      this.$loading.pause()\n    }\n\n    if (nextCalled) {\n      return\n    }\n\n    nextCalled = true\n    next(path)\n  }\n\n  // Update context\n  await setContext(app, {\n    route: to,\n    from,\n    next: _next.bind(this)\n  })\n  this._dateLastError = app.nuxt.dateErr\n  this._hadError = Boolean(app.nuxt.err)\n\n  // Get route's matched components\n  const matches = []\n  const Components = getMatchedComponents(to, matches)\n\n  // If no Components matched, generate 404\n  if (!Components.length) {\n    // Load layout for error page\n    const errorLayout = (NuxtError.options || NuxtError).layout\n    const layout = await this.loadLayout(\n      typeof errorLayout === 'function'\n        ? errorLayout.call(NuxtError, app.context)\n        : errorLayout\n    )\n\n    // Show error page\n    app.context.error({ statusCode: 404, message: 'This page could not be found' })\n    return next()\n  }\n\n  // Apply transitions\n  this.setTransitions(mapTransitions(Components, to, from))\n\n  try {\n    // Set layout\n    let layout = Components[0].options.layout\n    if (typeof layout === 'function') {\n      layout = layout(app.context)\n    }\n    layout = await this.loadLayout(layout)\n\n    // If not redirected\n    if (!nextCalled) {\n      if (this.$loading.finish && !this.$loading.manual) {\n        this.$loading.finish()\n      }\n\n      next()\n    }\n  } catch (err) {\n    const error = err || {}\n    if (error.message === 'ERR_REDIRECT') {\n      return this.$nuxt.$emit('routeChanged', to, from, error)\n    }\n    _lastPaths = []\n\n    globalHandleError(error)\n\n    // Load error layout\n    let layout = (NuxtError.options || NuxtError).layout\n    if (typeof layout === 'function') {\n      layout = layout(app.context)\n    }\n    await this.loadLayout(layout)\n\n    this.error(error)\n    this.$nuxt.$emit('routeChanged', to, from, error)\n    next()\n  }\n}\n\n// Fix components format in matched, it's due to code-splitting of vue-router\nfunction normalizeComponents (to, ___) {\n  flatMapComponents(to, (Component, _, match, key) => {\n    if (typeof Component === 'object' && !Component.options) {\n      // Updated via vue-router resolveAsyncComponents()\n      Component = Vue.extend(Component)\n      Component._Ctor = Component\n      match.components[key] = Component\n    }\n    return Component\n  })\n}\n\nfunction showNextPage (to) {\n  // Hide error component if no error\n  if (this._hadError && this._dateLastError === this.$options.nuxt.dateErr) {\n    this.error()\n  }\n\n  // Set layout\n  let layout = this.$options.nuxt.err\n    ? (NuxtError.options || NuxtError).layout\n    : to.matched[0].components.default.options.layout\n\n  if (typeof layout === 'function') {\n    layout = layout(app.context)\n  }\n  this.setLayout(layout)\n}\n\n// When navigating on a different route but the same component is used, Vue.js\n// Will not update the instance data, so we have to update $data ourselves\nfunction fixPrepatch (to, ___) {\n  if (this._pathChanged === false && this._queryChanged === false) {\n    return\n  }\n\n  const instances = getMatchedComponentsInstances(to)\n  const Components = getMatchedComponents(to)\n\n  Vue.nextTick(() => {\n    instances.forEach((instance, i) => {\n      if (!instance || instance._isDestroyed) {\n        return\n      }\n\n      if (\n        instance.constructor._dataRefresh &&\n        Components[i] === instance.constructor &&\n        instance.$vnode.data.keepAlive !== true &&\n        typeof instance.constructor.options.data === 'function'\n      ) {\n        const newData = instance.constructor.options.data.call(instance)\n        for (const key in newData) {\n          Vue.set(instance.$data, key, newData[key])\n        }\n\n        // Ensure to trigger scroll event after calling scrollBehavior\n        window.$nuxt.$nextTick(() => {\n          window.$nuxt.$emit('triggerScroll')\n        })\n      }\n    })\n    showNextPage.call(this, to)\n\n    // Hot reloading\n    setTimeout(() => hotReloadAPI(this), 100)\n  })\n}\n\nfunction nuxtReady (_app) {\n  window.onNuxtReadyCbs.forEach((cb) => {\n    if (typeof cb === 'function') {\n      cb(_app)\n    }\n  })\n  // Special JSDOM\n  if (typeof window._onNuxtLoaded === 'function') {\n    window._onNuxtLoaded(_app)\n  }\n  // Add router hooks\n  router.afterEach((to, from) => {\n    // Wait for fixPrepatch + $data updates\n    Vue.nextTick(() => _app.$nuxt.$emit('routeChanged', to, from))\n  })\n}\n\nconst noopData = () => { return {} }\nconst noopFetch = () => {}\n\n// Special hot reload with asyncData(context)\nfunction getNuxtChildComponents ($parent, $components = []) {\n  $parent.$children.forEach(($child) => {\n    if ($child.$vnode && $child.$vnode.data.nuxtChild && !$components.find(c =>(c.$options.__file === $child.$options.__file))) {\n      $components.push($child)\n    }\n    if ($child.$children && $child.$children.length) {\n      getNuxtChildComponents($child, $components)\n    }\n  })\n\n  return $components\n}\n\nfunction hotReloadAPI(_app) {\n  if (!module.hot) return\n\n  let $components = getNuxtChildComponents(_app.$nuxt, [])\n\n  $components.forEach(addHotReload.bind(_app))\n}\n\nfunction addHotReload ($component, depth) {\n  if ($component.$vnode.data._hasHotReload) return\n  $component.$vnode.data._hasHotReload = true\n\n  var _forceUpdate = $component.$forceUpdate.bind($component.$parent)\n\n  $component.$vnode.context.$forceUpdate = async () => {\n    let Components = getMatchedComponents(router.currentRoute)\n    let Component = Components[depth]\n    if (!Component) {\n      return _forceUpdate()\n    }\n    if (typeof Component === 'object' && !Component.options) {\n      // Updated via vue-router resolveAsyncComponents()\n      Component = Vue.extend(Component)\n      Component._Ctor = Component\n    }\n    this.error()\n    let promises = []\n    const next = function (path) {\n      this.$loading.finish && this.$loading.finish()\n      router.push(path)\n    }\n    await setContext(app, {\n      route: router.currentRoute,\n      isHMR: true,\n      next: next.bind(this)\n    })\n    const context = app.context\n\n    if (this.$loading.start && !this.$loading.manual) {\n      this.$loading.start()\n    }\n\n    callMiddleware.call(this, Components, context)\n    .then(() => {\n      // If layout changed\n      if (depth !== 0) {\n        return\n      }\n\n      let layout = Component.options.layout || 'default'\n      if (typeof layout === 'function') {\n        layout = layout(context)\n      }\n      if (this.layoutName === layout) {\n        return\n      }\n      let promise = this.loadLayout(layout)\n      promise.then(() => {\n        this.setLayout(layout)\n        Vue.nextTick(() => hotReloadAPI(this))\n      })\n      return promise\n    })\n\n    .then(() => {\n      return callMiddleware.call(this, Components, context, this.layout)\n    })\n\n    .then(() => {\n      return Promise.all(promises)\n    })\n    .then(() => {\n      this.$loading.finish && this.$loading.finish()\n      _forceUpdate()\n      setTimeout(() => hotReloadAPI(this), 100)\n    })\n  }\n}\n\nasync function mountApp (__app) {\n  // Set global variables\n  app = __app.app\n  router = __app.router\n\n  // Create Vue instance\n  const _app = new Vue(app)\n\n  // Load layout\n  const layout = NUXT.layout || 'default'\n  await _app.loadLayout(layout)\n  _app.setLayout(layout)\n\n  // Mounts Vue app to DOM element\n  const mount = () => {\n    _app.$mount('#__nuxt')\n\n    // Add afterEach router hooks\n    router.afterEach(normalizeComponents)\n    router.afterEach(fixPrepatch.bind(_app))\n\n    // Listen for first Vue update\n    Vue.nextTick(() => {\n      // Call window.{{globals.readyCallback}} callbacks\n      nuxtReady(_app)\n\n      // Enable hot reloading\n      hotReloadAPI(_app)\n    })\n  }\n\n  // Resolve route components\n  const Components = await Promise.all(resolveComponents(router))\n\n  // Enable transitions\n  _app.setTransitions = _app.$options.nuxt.setTransitions.bind(_app)\n  if (Components.length) {\n    _app.setTransitions(mapTransitions(Components, router.currentRoute))\n    _lastPaths = router.currentRoute.matched.map(route => compile(route.path)(router.currentRoute.params))\n  }\n\n  // Initialize error handler\n  _app.$loading = {} // To avoid error while _app.$nuxt does not exist\n  if (NUXT.error) {\n    _app.error(NUXT.error)\n  }\n\n  // Add beforeEach router hooks\n  router.beforeEach(loadAsyncComponents.bind(_app))\n  router.beforeEach(render.bind(_app))\n\n  // If page already is server rendered\n  if (NUXT.serverRendered) {\n    mount()\n    return\n  }\n\n  // First render on client-side\n  const clientFirstMount = () => {\n    normalizeComponents(router.currentRoute, router.currentRoute)\n    showNextPage.call(_app, router.currentRoute)\n    // Don't call fixPrepatch.call(_app, router.currentRoute, router.currentRoute) since it's first render\n    mount()\n  }\n\n  render.call(_app, router.currentRoute, router.currentRoute, (path) => {\n    // If not redirected\n    if (!path) {\n      clientFirstMount()\n      return\n    }\n\n    // Add a one-time afterEach hook to\n    // mount the app wait for redirect and route gets resolved\n    const unregisterHook = router.afterEach((to, from) => {\n      unregisterHook()\n      clientFirstMount()\n    })\n\n    // Push the path and let route to be resolved\n    router.push(path, undefined, (err) => {\n      if (err) {\n        errorHandler(err)\n      }\n    })\n  })\n}\n"]}]}