{"remainingRequest":"/home/otacon424/Documents/github/portfolio/v6/node_modules/thread-loader/dist/cjs.js??ref--2-1!/home/otacon424/Documents/github/portfolio/v6/node_modules/babel-loader/lib/index.js??ref--2-2!/home/otacon424/Documents/github/portfolio/v6/node_modules/eslint-loader/dist/cjs.js!/home/otacon424/Documents/github/portfolio/v6/components/thanks/PaymentButton.js","dependencies":[{"path":"/home/otacon424/Documents/github/portfolio/v6/components/thanks/PaymentButton.js","mtime":1585717879667},{"path":"/home/otacon424/Documents/github/portfolio/v6/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/otacon424/Documents/github/portfolio/v6/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/otacon424/Documents/github/portfolio/v6/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/otacon424/Documents/github/portfolio/v6/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucHJvbWlzZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5hc3NpZ24iOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5wcm9taXNlLmZpbmFsbHkiOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIHN0cmlwZTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgb3B0aW9uczogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHZhciBzdHJpcGVJbnN0YW5jZSA9IHRoaXMuc3RyaXBlOwogICAgcmV0dXJuIHsKICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgY2FuTWFrZVBheW1lbnQ6IGZhbHNlLAogICAgICBlbGVtZW50czogc3RyaXBlSW5zdGFuY2UuZWxlbWVudHMoewogICAgICAgIGxvY2FsZTogdGhpcy4kcm9vdC5sb2NhbGUKICAgICAgfSksCiAgICAgIHBheW1lbnRSZXF1ZXN0OiBzdHJpcGVJbnN0YW5jZS5wYXltZW50UmVxdWVzdCh0aGlzLm9wdGlvbnMucGF5bWVudFJlcXVlc3QgfHwge30pCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGJ1dHRvblN0eWxlOiBmdW5jdGlvbiBidXR0b25TdHlsZSgpIHsKICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucyAmJiB0aGlzLm9wdGlvbnMuc3R5bGUgfHwgdW5kZWZpbmVkOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuY2hlY2tBcGlBdmFpbGFiaWxpdHkoKTsKICB9LAogIHdhdGNoOiB7CiAgICBvcHRpb25zOiBmdW5jdGlvbiBvcHRpb25zKCkgewogICAgICB0aGlzLnVwZGF0ZVBheW1lbnRSZXF1ZXN0KCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBjaGVja0FwaUF2YWlsYWJpbGl0eTogZnVuY3Rpb24gY2hlY2tBcGlBdmFpbGFiaWxpdHkoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjYW5NYWtlUGF5bWVudDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLnBheW1lbnRSZXF1ZXN0LmNhbk1ha2VQYXltZW50KCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGNhbk1ha2VQYXltZW50ID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgICBfdGhpcy5pbml0KGNhbk1ha2VQYXltZW50KTsKCiAgICAgICAgICAgICAgICBfdGhpcy5wYXltZW50UmVxdWVzdC5vbigncGF5bWVudG1ldGhvZCcsIGZ1bmN0aW9uIChldmVudCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGVtaXQoJ3JlY2VpdmVkUGF5bWVudE1ldGhvZCcsIGV2ZW50KTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gODsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDhdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoY2FuTWFrZVBheW1lbnQpIHsKICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIHRoaXMuY2FuTWFrZVBheW1lbnQgPSBjYW5NYWtlUGF5bWVudDsKICAgICAgdGhpcy4kbmV4dFRpY2sodGhpcy5jcmVhdGVQYXltZW50UmVxdWVzdEJ1dHRvbik7CiAgICB9LAogICAgY3JlYXRlUGF5bWVudFJlcXVlc3RCdXR0b246IGZ1bmN0aW9uIGNyZWF0ZVBheW1lbnRSZXF1ZXN0QnV0dG9uKCkgewogICAgICBpZiAoIXRoaXMuY2FuTWFrZVBheW1lbnQgfHwgIXRoaXMuJHJlZnMuZWxlbWVudCkgewogICAgICAgIHRoaXMuJGVtaXQoJ2F2YWlsYWJsZScsIGZhbHNlKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuJGVtaXQoJ2F2YWlsYWJsZScsIHRydWUpOwogICAgICB0aGlzLmVsZW1lbnRzLmNyZWF0ZSgncGF5bWVudFJlcXVlc3RCdXR0b24nLCB7CiAgICAgICAgcGF5bWVudFJlcXVlc3Q6IHRoaXMucGF5bWVudFJlcXVlc3QsCiAgICAgICAgc3R5bGU6IHRoaXMuYnV0dG9uU3R5bGUgfHwge30KICAgICAgfSkubW91bnQodGhpcy4kcmVmcy5lbGVtZW50KTsKICAgIH0sCiAgICB1cGRhdGVQYXltZW50UmVxdWVzdDogZnVuY3Rpb24gdXBkYXRlUGF5bWVudFJlcXVlc3QoKSB7CiAgICAgIGlmICghdGhpcy5wYXltZW50UmVxdWVzdCkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdmFyIHRvdGFsID0gdGhpcy5vcHRpb25zLnBheW1lbnRSZXF1ZXN0LnRvdGFsOwogICAgICB0aGlzLnBheW1lbnRSZXF1ZXN0LnVwZGF0ZSh7CiAgICAgICAgdG90YWw6IHRvdGFsCiAgICAgIH0pOwogICAgfQogIH0sCiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoY3JlYXRlRWxlbWVudCkgewogICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgLy8gUmVuZGVyIGEgbG9hZGluZyBzbG90IGlmIHdlIGFyZSB3YWl0aW5nIGZvciBjYW5NYWtlUGF5bWVudC4KICAgIGlmICh0aGlzLmxvYWRpbmcpIHsKICAgICAgcmV0dXJuIHRoaXMuJHNsb3RzLmxvYWRpbmcgJiYgdGhpcy4kc2xvdHMubG9hZGluZ1swXTsKICAgIH0gLy8gUmVuZGVyIGEgd2FybmluZyBzbG90IGlmIHBheW1lbnQgcmVxdWVzdCBpc24ndCBhdmFpbGFibGUuCgoKICAgIGlmICghdGhpcy5jYW5NYWtlUGF5bWVudCkgewogICAgICByZXR1cm4gdGhpcy4kc2xvdHMudW5hdmFpbGFibGUgJiYgdGhpcy4kc2xvdHMudW5hdmFpbGFibGVbMF07CiAgICB9IC8vIFJlbmRlciBzY29wZWQgc2xvdCBpZiBwcm92aWRlZC4KCgogICAgaWYgKHRoaXMuJHNjb3BlZFNsb3RzLmRlZmF1bHQpIHsKICAgICAgcmV0dXJuIHRoaXMuJHNjb3BlZFNsb3RzLmRlZmF1bHQoewogICAgICAgIGxpc3RlbmVyczogewogICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKGV2ZW50KSB7CiAgICAgICAgICAgIHJldHVybiBfdGhpczIucGF5bWVudFJlcXVlc3Quc2hvdygpOwogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgY2FuTWFrZVBheW1lbnQ6IHRoaXMuY2FuTWFrZVBheW1lbnQKICAgICAgfSk7CiAgICB9IC8vIE90aGVyd2lzZSByZW5kZXIgZGVmYXVsdCBTdHJpcGUgRWxlbWVudCBidXR0b24uCgoKICAgIHJldHVybiBjcmVhdGVFbGVtZW50KCdkaXYnLCB7CiAgICAgIHJlZjogJ2VsZW1lbnQnCiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["/home/otacon424/Documents/github/portfolio/v6/components/thanks/PaymentButton.js"],"names":["props","stripe","type","Object","required","options","default","data","stripeInstance","loading","canMakePayment","elements","locale","$root","paymentRequest","computed","buttonStyle","style","undefined","mounted","checkApiAvailability","watch","updatePaymentRequest","methods","init","on","event","$emit","$nextTick","createPaymentRequestButton","$refs","element","create","mount","total","update","render","createElement","$slots","unavailable","$scopedSlots","listeners","click","show","ref"],"mappings":"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","sourcesContent":["export default {\n  props: {\n    stripe: {\n      type: Object,\n      required: true\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    const stripeInstance = this.stripe\n\n    return {\n      loading: true,\n      canMakePayment: false,\n      elements: stripeInstance.elements({ locale: this.$root.locale }),\n      paymentRequest: stripeInstance.paymentRequest(this.options.paymentRequest || {})\n    }\n  },\n  computed: {\n    buttonStyle () {\n      return (this.options && this.options.style) || undefined\n    }\n  },\n  mounted () {\n    this.checkApiAvailability()\n  },\n  watch: {\n    options () {\n      this.updatePaymentRequest()\n    }\n  },\n  methods: {\n    async checkApiAvailability () {\n      try {\n        const canMakePayment = await this.paymentRequest.canMakePayment()\n        this.init(canMakePayment)\n\n        this.paymentRequest.on('paymentmethod', event => this.$emit('receivedPaymentMethod', event))\n      } catch (_) {}\n    },\n    init (canMakePayment) {\n      this.loading = false\n      this.canMakePayment = canMakePayment\n      this.$nextTick(this.createPaymentRequestButton)\n    },\n    createPaymentRequestButton () {\n      if (!this.canMakePayment || !this.$refs.element) {\n        this.$emit('available', false)\n        return\n      }\n\n      this.$emit('available', true)\n\n      this.elements\n        .create('paymentRequestButton', { paymentRequest: this.paymentRequest, style: this.buttonStyle || {} })\n        .mount(this.$refs.element)\n    },\n    updatePaymentRequest () {\n      if (!this.paymentRequest) {\n        return\n      }\n      const { total } = this.options.paymentRequest\n      this.paymentRequest.update({ total })\n    }\n  },\n  render (createElement) {\n    // Render a loading slot if we are waiting for canMakePayment.\n    if (this.loading) {\n      return this.$slots.loading && this.$slots.loading[0]\n    }\n\n    // Render a warning slot if payment request isn't available.\n    if (!this.canMakePayment) {\n      return this.$slots.unavailable && this.$slots.unavailable[0]\n    }\n\n    // Render scoped slot if provided.\n    if (this.$scopedSlots.default) {\n      return this.$scopedSlots.default({\n        listeners: { click: event => this.paymentRequest.show() },\n        canMakePayment: this.canMakePayment\n      })\n    }\n\n    // Otherwise render default Stripe Element button.\n    return createElement('div', { ref: 'element' })\n  }\n}\n"]}]}